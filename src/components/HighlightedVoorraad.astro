---
import Icon from "./Icon.astro";
import Card from "./Card.astro";
import DirectusImage from "./DirectusImage.astro";
import directus from "../lib/directus";
import { readItems } from "@directus/sdk";

interface Props {
  exclude?: string;
}

const { exclude } = Astro.props;
const otherItems = await directus.request(
  readItems("voorraad", {
    limit: 3,
    fields: ["*", { merk: ["naam"], fotos: [{ directus_files_id: ["*"] }] }],
    sort: ["-user_created"],
    filter: {
      slug: {
        _neq: exclude,
      },
    },
  }),
);
---

<div class="flex flex-col items-stretch gap-6 md:flex-row">
  {
    otherItems.map((item) => {
      const image =
        typeof item.fotos[0] !== "number" ? item.fotos[0] : undefined;
      const merk = typeof item.merk !== "number" ? item.merk.naam : "Onbekend";
      return (
        <a class="md:basis-1/3" href={`/voorraad/${item.slug}`}>
          <Card>
            <DirectusImage
              slot="image"
              transition:name={image?.directus_files_id.id}
              file={image!.directus_files_id}
              width={358}
              height={233}
              class="w-full"
            />
            <slot name="title">{merk}</slot>
            <div class="text-neutral-400">{item.model}</div>
            <div class="mt-8 flex items-center justify-between text-sm">
              <span>
                {!!item.prijs &&
                  Intl.NumberFormat("nl-NL", {
                    style: "currency",
                    currency: "EUR",
                  }).format(Number(item.prijs))}
              </span>
              <Icon
                class="h-10 transition-transform hover:translate-x-1"
                name="circle-arrow-right"
              />
            </div>
          </Card>
        </a>
      );
    })
  }
</div>
