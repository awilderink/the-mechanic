---
import type { GetStaticPaths } from 'astro';
import Accordion from '../../components/Accordion.astro';
import AccordionItem from '../../components/AccordionItem.astro';
import Button from '../../components/Button.astro';
import FeaturedVoorraad from '../../components/FeaturedVoorraad.astro';
import Icon from '../../components/Icon.astro';
import SanityImage from '../../components/SanityImage.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getVoorraad, getVoorraadItem } from '../../sanity/index.ts';

export const prerender = true;

const { slug } = Astro.params;

export const getStaticPaths: GetStaticPaths = async () => {
	const voorraadItems = await getVoorraad();
	return voorraadItems.map((item) => ({
		params: { slug: item.slug?.current },
		props: { item },
	}));
};

const item = await getVoorraadItem(String(slug));

if (!item) {
	return Astro.redirect('/404');
}
---

<style>
  .car-grid {
    grid-template-areas:
      "images"
      "thumbnails"
      "details"
      "actions"
      "info";
    grid-template-columns: 1fr;
  }

  @media (min-width: 768px) {
    .car-grid {
      grid-template-areas:
        "images thumbnails"
        "images details"
        "images details"
        "info   details";
      grid-template-columns: 6fr 4fr;
      grid-template-rows: auto auto 1fr auto;
    }
  }
</style>
<BaseLayout>
  <section class="p-4">
    <div
      x-data="carCarousel"
      class="car-grid container mx-auto grid max-w-6xl gap-4 pt-24 md:flex-row md:gap-10"
    >
        <div 
          x-ref="emblaViewport"
          class="embla__viewport overflow-hidden rounded-xl relative [grid-area:images]"
           transition:name={item.fotos?.[0]._key}
        >
          <div class="embla__container flex gap-4">
            {
              item.fotos?.map((image) => (
                <SanityImage
                  class="embla__slide min-w-0 shrink-0 grow-0 basis-full"
                  height={600}
                  width={800}
                  image={image.asset?._ref}
                />
              ))
            }
          </div>
        </div>
        <div class="text-primary absolute right-6 bottom-6 flex gap-2">
          <button
            @click="prevSlide()"
            class="hover:text-sand transition-colors"
            aria-label="Vorige"
          >
            <Icon name="circle-arrow-left" class="size-10" />
          </button>
          <button
            @click="nextSlide()"
            class="hover:text-sand transition-colors"
            aria-label="Volgende"
          >
            <Icon name="circle-arrow-right" class="size-10" />
          </button>
        </div>
     

      <div class="min-w-0 [grid-area:thumbnails]">
        <h1 class="text-primary text-2xl md:text-4xl">
          {item.merk?.naam}{" "}
          {item.titel}
        </h1>
        <div 
          x-ref="emblaThumbsViewport"
          class="embla-thumbs__viewport mt-2 overflow-hidden"
        >
          <div class="embla-thumbs__container flex flex-row gap-1">
            {
              item.fotos?.map((foto, index) => (
                <div 
                  @click={`scrollToIndex(${index})`}
                  class="group embla-thumbs__slide relative min-w-0 shrink-0 grow-0 basis-1/8 overflow-hidden rounded-md cursor-pointer"
                  :class={`{'active': currentIndex === ${index}}`}
                >
                  <div class="absolute inset-0 bg-neutral-200/50 transition-colors duration-75 group-[.active]:bg-neutral-200/0 hover:bg-neutral-200/0" />
                  <SanityImage
                    height={40}
                    width={60}
                    class="h-full w-full object-cover"
                    image={foto.asset?._ref}
                  />
                </div>
              ))
            }
          </div>
        </div>
      </div>
      <div class="relative mt-2 flex flex-col [grid-area:details]">
        <div class="sticky top-8 z-10">
          <!-- {
            item?.highlight && (
              <Title variant="tertiary" class="text-primary mb-2">
                {voorraadItem.highlight}
              </Title>
            )
          } -->
          <div>
            <dl
              class="[&_dd]:text-primary grid grid-cols-2 gap-6 font-light md:grid-cols-3 [&_dt]:text-neutral-500"
            >
              <div>
                <dt>Bouwjaar</dt>
                <dd>{item.bouwjaar}</dd>
              </div>
              <div>
                <dt>Km stand</dt>
                <dd>
                  {
                    Intl.NumberFormat("nl-NL").format(
                      Number(item.kilometerstand)
                    )
                  } km
                </dd>
              </div>
              <div>
                <dt>Prijs</dt>
                <dd>
                  {
                    Intl.NumberFormat("nl-NL", {
                      currency: "EUR",
                      style: "currency",
                    }).format(Number(item.prijs))
                  }
                </dd>
              </div>
              <div>
                <dt>Brandstof</dt>
                <dd class="capitalize">{item.brandstof}</dd>
              </div>
              <!-- <div>
                <dt>Motorinhoud</dt>
                <dd>{item.motor_inhoud}</dd>
              </div> -->
              <!-- <div>
                <dt>Kleur</dt>
                <dd>{item.kleur}</dd>
              </div> -->
            </dl>
          </div>
          <div class="mt-4 flex flex-col gap-2">
            <Button class="flex items-center justify-center gap-2 font-thin">
              <Icon class="mr-2 h-4 w-4" name="phone" />
              <span>070 8209890</span>
            </Button>
            <Button
              class="flex items-center justify-center gap-2 font-thin"
              variant="secondary"
            >
              <Icon name="email" class="mr-2 h-4 w-4" />
              info@themechanic.nl
            </Button>
          </div>
        </div>
      </div>
      <div class="container mx-auto mt-10 max-w-6xl [grid-area:info]">
        <div class="flex items-center justify-between">
          <h1 class="text-4xl">{item.merk?.naam}{" "}{item.titel}</h1>
          <div class="flex gap-1">
            <Icon name="linkedIn" class="size-9" />
            <Icon name="facebook" class="size-9" />
            <Icon name="instagram" class="size-9" />
          </div>
        </div>
        <Accordion class="mt-8">
          {
            item.specificaties?.map(({ label, waarde }, i) => (
              <AccordionItem open={!i}>
                <span slot="title">{label}</span>
                <div set:html={waarde} />
              </AccordionItem>
            ))
          }
        </Accordion>
      </div>
    </div>
  </section>
  <section class="bg-sand px-4 py-14">
    <div class="container mx-auto max-w-6xl">
      <FeaturedVoorraad exclude={item.slug?.current} />
    </div>
  </section>
</BaseLayout>

<script>
  import EmblaCarousel from "embla-carousel";
  import Autoplay from "embla-carousel-autoplay";
  import type { EmblaCarouselType } from "embla-carousel";
  import Alpine from "alpinejs";

  
  Alpine.data("carCarousel", () => ({
    currentIndex: 0,
    emblaApiMain: null as EmblaCarouselType | null,
    emblaApiThumb: null as EmblaCarouselType | null,

    init() {
      this.$nextTick(() => {
        const emblaMainNode = this.$refs.emblaViewport;
        const emblaThumbNode = this.$refs.emblaThumbsViewport;
        
        if (emblaMainNode) {
          this.emblaApiMain = EmblaCarousel(emblaMainNode, { 
            loop: true 
          }, [Autoplay({ delay: 4000, stopOnInteraction: false })]);
          
          this.emblaApiMain.on("select", () => {
            this.currentIndex = this.emblaApiMain!.selectedScrollSnap();
            if (this.emblaApiThumb) {
              this.emblaApiThumb.scrollTo(this.currentIndex);
            }
          });
        }

        if (emblaThumbNode) {
          this.emblaApiThumb = EmblaCarousel(emblaThumbNode, {
            dragFree: true,
            containScroll: "keepSnaps",
          });
        }
      });
    },

    prevSlide() {
      if (this.emblaApiMain) this.emblaApiMain.scrollPrev();
    },

    nextSlide() {
      if (this.emblaApiMain) this.emblaApiMain.scrollNext();
    },

    scrollToIndex(index: number) {
      if (this.emblaApiMain) this.emblaApiMain.scrollTo(index);
    },
  }));
</script>
